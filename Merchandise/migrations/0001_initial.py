# Generated by Django 3.2.8 on 2022-02-20 11:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BudgetPreCost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quotation_id', models.CharField(blank=True, max_length=120, null=True)),
                ('er', models.CharField(blank=True, max_length=120, null=True)),
                ('job_qty', models.FloatField(blank=True, default=0, null=True)),
                ('avg_rate', models.FloatField(blank=True, default=0, null=True)),
                ('order_unit', models.CharField(blank=True, max_length=120, null=True)),
                ('item_details', models.CharField(blank=True, max_length=250, null=True)),
                ('costing_date', models.DateField(blank=True, null=True)),
                ('incoterm_place', models.CharField(blank=True, max_length=250, null=True)),
                ('machine_line', models.CharField(blank=True, max_length=120, null=True)),
                ('prod_line', models.CharField(blank=True, max_length=120, null=True)),
                ('costing_per', models.CharField(blank=True, max_length=120, null=True)),
                ('approved', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('sew_efficiency', models.FloatField(blank=True, default=0, null=True)),
                ('cut_efficiency', models.FloatField(blank=True, default=0, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('budget_minute', models.IntegerField(blank=True, default=0, null=True)),
                ('file_no', models.CharField(blank=True, max_length=120, null=True)),
                ('internal_ref', models.CharField(blank=True, max_length=120, null=True)),
                ('copy_form', models.CharField(blank=True, max_length=120, null=True)),
                ('redy_to_approved', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('mini_marker_upload', models.FileField(blank=True, null=True, upload_to='Budget/Image')),
                ('insert_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('inserted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bpc_insert_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Care_Level',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tt_cons', models.FloatField(blank=True, default=0, null=True)),
                ('tt_ex_pct', models.FloatField(blank=True, default=0, null=True)),
                ('grand_tt_cons', models.FloatField(blank=True, default=0, null=True)),
                ('tt_rate', models.FloatField(blank=True, default=0, null=True)),
                ('sub_tt_amount', models.FloatField(blank=True, default=0, null=True)),
                ('tt_qty_dzn', models.FloatField(blank=True, default=0, null=True)),
                ('grand_tt_amount', models.FloatField(blank=True, default=0, null=True)),
                ('tt_pcs', models.FloatField(blank=True, default=0, null=True)),
                ('avg_tt_cons', models.FloatField(blank=True, default=0, null=True)),
                ('avg_ex_pct', models.FloatField(blank=True, default=0, null=True)),
                ('avg_grand_tt_cons', models.FloatField(blank=True, default=0, null=True)),
                ('avg_tt_rate', models.FloatField(blank=True, default=0, null=True)),
                ('avg_sub_tt_amount', models.FloatField(blank=True, default=0, null=True)),
                ('avg_tt_qty_dzn', models.FloatField(blank=True, default=0, null=True)),
                ('avg_grand_tt_amount', models.FloatField(blank=True, default=0, null=True)),
                ('avg_tt_pcs', models.FloatField(blank=True, default=0, null=True)),
                ('insert_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('b_job_no', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='care_level', to='Merchandise.budgetprecost')),
                ('inserted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='care_insert_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ColorContrast',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insert_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('b_job_no', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='color_contrast', to='Merchandise.budgetprecost')),
            ],
        ),
        migrations.CreateModel(
            name='ColorSizeItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article_number', models.CharField(blank=True, max_length=120, null=True)),
                ('color', models.CharField(blank=True, max_length=120, null=True)),
                ('size', models.CharField(blank=True, max_length=120, null=True)),
                ('order_qty', models.IntegerField(blank=True, default=0, null=True)),
                ('rate', models.FloatField(blank=True, default=0, null=True)),
                ('amount', models.FloatField(blank=True, default=0, null=True)),
                ('excess_cut', models.FloatField(blank=True, default=0, null=True)),
                ('plan_cut_qty', models.FloatField(blank=True, default=0, null=True)),
                ('status_active', models.CharField(blank=True, choices=[('Active', 'Active'), ('Inactive', 'Inactive')], max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Conversion_Inline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fab_desc', models.CharField(blank=True, max_length=120, null=True)),
                ('process_loss', models.FloatField(blank=True, default=0, null=True)),
                ('reg_qty', models.FloatField(blank=True, default=0, null=True)),
                ('avg_reg_qty', models.FloatField(blank=True, default=0, null=True)),
                ('charge_unit', models.FloatField(blank=True, default=0, null=True)),
                ('amount', models.FloatField(blank=True, default=0, null=True)),
                ('status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DyeingColor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tt_cons', models.FloatField(blank=True, default=0, null=True)),
                ('tt_charge', models.FloatField(blank=True, default=0, null=True)),
                ('avg_tt_cons', models.FloatField(blank=True, default=0, null=True)),
                ('avg_tt_charge', models.FloatField(blank=True, default=0, null=True)),
                ('insert_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('b_job_no', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='color_popup', to='Merchandise.budgetprecost')),
                ('conversion_cost', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='con_cost', to='Merchandise.conversion_inline')),
                ('inserted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='color_pop', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Fabric_Inline_Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gmts_items', models.CharField(blank=True, max_length=200, null=True)),
                ('body_part', models.CharField(blank=True, max_length=200, null=True)),
                ('body_part_type', models.CharField(blank=True, max_length=200, null=True)),
                ('source', models.CharField(blank=True, choices=[('Foreign', 'Foreign'), ('Local', 'Local')], max_length=50, null=True)),
                ('fabric_desc', models.CharField(blank=True, max_length=200, null=True)),
                ('gms', models.CharField(blank=True, max_length=80, null=True)),
                ('color', models.CharField(blank=True, max_length=200, null=True)),
                ('avg_grey_cons', models.FloatField(blank=True, default=0, null=True)),
                ('rate', models.FloatField(blank=True, default=0, null=True)),
                ('amount', models.FloatField(blank=True, default=0, null=True)),
                ('total_quantity', models.FloatField(blank=True, default=0, null=True)),
                ('total_amount', models.FloatField(blank=True, default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Grey_Cons',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tt_finish_cons', models.FloatField(blank=True, default=0, null=True)),
                ('tt_process_loss', models.FloatField(blank=True, default=0, null=True)),
                ('tt_grey_cons', models.FloatField(blank=True, default=0, null=True)),
                ('tt_rate', models.FloatField(blank=True, default=0, null=True)),
                ('sub_tt_amount', models.FloatField(blank=True, default=0, null=True)),
                ('tt_pcs', models.FloatField(blank=True, default=0, null=True)),
                ('sub_tt_qty', models.FloatField(blank=True, default=0, null=True)),
                ('gt_tt_qty', models.FloatField(blank=True, default=0, null=True)),
                ('avg_finish_cons', models.FloatField(blank=True, default=0, null=True)),
                ('avg_process_loss', models.FloatField(blank=True, default=0, null=True)),
                ('avg_grey_cons', models.FloatField(blank=True, default=0, null=True)),
                ('avg_rate', models.FloatField(blank=True, default=0, null=True)),
                ('sub_avg_amount', models.FloatField(blank=True, default=0, null=True)),
                ('avg_pcs', models.FloatField(blank=True, default=0, null=True)),
                ('sub_avg_qty', models.FloatField(blank=True, default=0, null=True)),
                ('gt_avg_qty', models.FloatField(blank=True, default=0, null=True)),
                ('insert_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('b_job_no', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='grey_cons', to='Merchandise.budgetprecost')),
                ('fabric_cost', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Merchandise.fabric_inline_item')),
                ('inserted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='grey_insert_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryAgent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent_name', models.CharField(max_length=200, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryBodyPart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body_part_name', models.CharField(max_length=200, null=True)),
                ('bp_Type', models.CharField(blank=True, max_length=200, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryBodyPartType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bp_Type_name', models.CharField(max_length=200, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryBuyer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buyer_name', models.CharField(max_length=200, null=True)),
                ('contact_person', models.CharField(blank=True, max_length=200, null=True)),
                ('buyer_email', models.CharField(max_length=200, null=True)),
                ('contact_no', models.CharField(max_length=20, null=True)),
                ('website', models.CharField(max_length=200, null=True)),
                ('address', models.TextField(null=True)),
                ('subcontract_party', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default=0, max_length=200, null=True)),
                ('remark', models.TextField(null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryClient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.CharField(max_length=200, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryColorSizeSensitive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color_size_sensitive', models.CharField(max_length=200, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryColorType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color_type', models.CharField(max_length=200, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryCompAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(max_length=200, null=True)),
                ('plot_no', models.CharField(max_length=20, null=True)),
                ('level_no', models.CharField(max_length=20, null=True)),
                ('road_no', models.CharField(max_length=20, null=True)),
                ('block_no', models.CharField(max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=200, null=True)),
                ('contact_person', models.CharField(max_length=200, null=True)),
                ('company_nature', models.CharField(max_length=200, null=True)),
                ('core_business', models.CharField(max_length=200, null=True)),
                ('email', models.CharField(max_length=200, null=True)),
                ('website', models.CharField(max_length=200, null=True)),
                ('province', models.CharField(max_length=120, null=True)),
                ('city', models.CharField(max_length=120, null=True)),
                ('zip_code', models.CharField(max_length=120, null=True)),
                ('trade_license_no', models.CharField(max_length=20, null=True)),
                ('color', models.CharField(blank=True, max_length=100, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryConsumptionBasis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consumption_basis', models.CharField(max_length=200, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryCostingPer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('costing_per', models.CharField(max_length=200, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryCountry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_name', models.CharField(max_length=200, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryCountryType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=200, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Merchandise.librarycountry')),
            ],
        ),
        migrations.CreateModel(
            name='LibraryCurrency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency_code', models.CharField(max_length=200, null=True)),
                ('description', models.TextField(blank=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryCutOff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cut_off', models.CharField(max_length=200, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryDealingMerchant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('d_merchant_name', models.CharField(max_length=200)),
                ('d_merchant_address', models.TextField(blank=True, null=True)),
                ('d_merchant_phone', models.CharField(max_length=200)),
                ('d_merchant_email', models.EmailField(max_length=200)),
                ('d_merchant_company', models.CharField(blank=True, max_length=200, null=True)),
                ('d_merchant_designation', models.CharField(blank=True, max_length=200, null=True)),
                ('d_merchant_dept', models.CharField(blank=True, max_length=200, null=True)),
                ('d_merchant_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryDesignSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_title', models.CharField(max_length=200, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryDiaTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('width_dia_name', models.CharField(max_length=200, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryDoller',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usd_rate', models.FloatField(default=0)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryDyeing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=200, null=True)),
                ('const_and_comp', models.CharField(max_length=200, null=True)),
                ('process_type', models.CharField(max_length=200, null=True)),
                ('process_name', models.CharField(max_length=200, null=True)),
                ('color', models.CharField(max_length=200, null=True)),
                ('width_dia_type', models.CharField(max_length=200, null=True)),
                ('inhouse_rate', models.FloatField(default=0)),
                ('bdt_to_usd', models.FloatField(default=0)),
                ('uom', models.CharField(max_length=80, null=True)),
                ('rate_type', models.CharField(max_length=200, null=True)),
                ('status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=50, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryFabNature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fab_nature_name', models.CharField(max_length=200, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryFabrication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fabrication', models.CharField(max_length=200, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryFabricSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fabric_source', models.CharField(max_length=200, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryFactoryMerchant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f_merchant_name', models.CharField(max_length=200)),
                ('f_merchant_address', models.TextField(blank=True, null=True)),
                ('f_merchant_phone', models.CharField(max_length=200)),
                ('f_merchant_email', models.EmailField(max_length=200)),
                ('f_merchant_company', models.CharField(blank=True, max_length=200, null=True)),
                ('f_merchant_designation', models.CharField(blank=True, max_length=200, null=True)),
                ('f_merchant_dept', models.CharField(blank=True, max_length=200, null=True)),
                ('f_merchant_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryGroupsItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_item_name', models.CharField(max_length=200, null=True)),
                ('group_item_uom', models.CharField(max_length=80, null=True)),
                ('trims_type', models.CharField(max_length=80, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryKnitting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=200, null=True)),
                ('body_part', models.CharField(max_length=200, null=True)),
                ('const_and_comp', models.CharField(max_length=200, null=True)),
                ('gsm', models.PositiveIntegerField(default=0)),
                ('yarn_desc', models.CharField(max_length=200, null=True)),
                ('uom', models.CharField(max_length=80, null=True)),
                ('inhouse_rate', models.FloatField(default=0)),
                ('bdt_to_usd', models.FloatField(default=0)),
                ('status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=50, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryNominatedSupp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplier_name', models.CharField(max_length=200, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryPacking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('packing_title', models.CharField(max_length=200, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryPaymentTerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_term_title', models.CharField(max_length=200, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryPcsQty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pcs_amount', models.PositiveIntegerField(default=12)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryProcess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('process_name', models.CharField(max_length=200, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryProdDept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department_name', models.CharField(max_length=200, null=True)),
                ('remark', models.TextField(null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryProdSubDept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_dept_name', models.CharField(max_length=200, null=True)),
                ('remark', models.TextField(null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(blank=True, max_length=180, null=True)),
                ('product_code', models.CharField(blank=True, max_length=20, null=True)),
                ('item_group', models.CharField(blank=True, max_length=80, null=True)),
                ('unit_of_measure', models.CharField(blank=True, max_length=80, null=True)),
                ('vat_per_unit', models.CharField(blank=True, max_length=80, null=True)),
                ('rate_per_unit', models.CharField(blank=True, max_length=80, null=True)),
                ('current_stock', models.IntegerField(blank=True, default=0, null=True)),
                ('status_active', models.CharField(blank=True, choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=20, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryProductCate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=200, null=True)),
                ('category_desc', models.TextField(null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryQualityLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quality_label_name', models.CharField(max_length=200, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryRegion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_name', models.CharField(max_length=200, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibrarySeason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season_name', models.CharField(max_length=200, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryShipmentTerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shipment_term_title', models.CharField(max_length=200, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryShipMode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ship_mode_name', models.CharField(max_length=200, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryTeamLeader',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leader_name', models.CharField(max_length=200)),
                ('leader_address', models.TextField(blank=True, null=True)),
                ('leader_phone', models.CharField(max_length=200)),
                ('leader_email', models.EmailField(max_length=200)),
                ('leader_company', models.CharField(blank=True, max_length=200, null=True)),
                ('leader_designation', models.CharField(blank=True, max_length=200, null=True)),
                ('leader_dept', models.CharField(blank=True, max_length=200, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryTrimSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_name', models.CharField(max_length=200, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_name', models.CharField(max_length=200, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryYarnSupplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplier_name', models.CharField(max_length=200, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryYarnType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=200, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='OrderEntryInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_no', models.CharField(max_length=40)),
                ('style_ref', models.CharField(blank=True, max_length=120, null=True)),
                ('style_description', models.TextField(blank=True, null=True)),
                ('sub_dept_code', models.CharField(blank=True, max_length=200, null=True)),
                ('repeat_job_no', models.CharField(blank=True, max_length=120, null=True)),
                ('bh_merchant', models.CharField(blank=True, max_length=200, null=True)),
                ('remarks', models.CharField(blank=True, max_length=200, null=True)),
                ('tt_set_ratio', models.FloatField(blank=True, default=0, null=True)),
                ('tt_sew_smv', models.FloatField(blank=True, default=0, null=True)),
                ('tt_cut_smv', models.FloatField(blank=True, default=0, null=True)),
                ('tt_fin_smv', models.FloatField(blank=True, default=0, null=True)),
                ('smv', models.FloatField(blank=True, default=0, null=True)),
                ('g_tt_smv', models.FloatField(blank=True, default=0, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='Order/')),
                ('file', models.FileField(blank=True, null=True, upload_to='Order/')),
                ('internal_ref', models.CharField(blank=True, max_length=80, null=True)),
                ('copy_form', models.CharField(blank=True, max_length=80, null=True)),
                ('insert_date', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('status_active', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=20, null=True)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lib_agent', to='Merchandise.libraryagent')),
                ('buyer_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lib_buyer', to='Merchandise.librarybuyer')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lib_client', to='Merchandise.libraryclient')),
                ('company_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_address', to='Merchandise.librarycompaddress')),
                ('company_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lib_company', to='Merchandise.librarycompany')),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lib_currency', to='Merchandise.librarycurrency')),
                ('dealing_merchant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lib_dealing', to='Merchandise.librarydealingmerchant')),
                ('design_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lib_source', to='Merchandise.librarydesignsource')),
                ('factory_merchant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lib_factory', to='Merchandise.libraryfactorymerchant')),
                ('inserted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='insert_by', to=settings.AUTH_USER_MODEL)),
                ('order_uom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lib_unit', to='Merchandise.libraryunit')),
                ('packing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lib_packing', to='Merchandise.librarypacking')),
                ('payment_term', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payment_term', to='Merchandise.librarypaymentterm')),
                ('product_cate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lib_product_cate', to='Merchandise.libraryproductcate')),
                ('product_dept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lib_prod_dept', to='Merchandise.libraryproddept')),
                ('quality_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lib_quality', to='Merchandise.libraryqualitylabel')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lib_region', to='Merchandise.libraryregion')),
                ('season', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lib_season', to='Merchandise.libraryseason')),
                ('ship_mode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lib_ship_mode', to='Merchandise.libraryshipmode')),
                ('shipment_term', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shipment_term', to='Merchandise.libraryshipmentterm')),
                ('sub_dept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lib_sub_dept', to='Merchandise.libraryprodsubdept')),
                ('team_leader', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lib_leader', to='Merchandise.libraryteamleader')),
                ('working_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='work_company', to='Merchandise.librarycompany')),
                ('working_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='work_location', to='Merchandise.librarycompaddress')),
            ],
        ),
        migrations.CreateModel(
            name='TrimCost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tt_cons_unit', models.FloatField(blank=True, default=0, null=True)),
                ('tt_rate', models.FloatField(blank=True, default=0, null=True)),
                ('tt_sub_amount', models.FloatField(blank=True, default=0, null=True)),
                ('tt_grand_quantity', models.FloatField(blank=True, default=0, null=True)),
                ('tt_grand_amount', models.FloatField(blank=True, default=0, null=True)),
                ('insert_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('b_job_no', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trim_cost', to='Merchandise.budgetprecost')),
                ('inserted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trim_insert_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='YarnCost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tt_cons_qty', models.FloatField(blank=True, default=0, null=True)),
                ('tt_amount', models.FloatField(blank=True, default=0, null=True)),
                ('insert_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('b_job_no', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='yarn_cost', to='Merchandise.budgetprecost')),
                ('inserted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='yarn_insert_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Yarn_Inline_Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.CharField(blank=True, max_length=120, null=True)),
                ('comp_one', models.CharField(blank=True, max_length=120, null=True)),
                ('pct', models.FloatField(blank=True, default=100, null=True)),
                ('color', models.CharField(blank=True, max_length=120, null=True)),
                ('type', models.CharField(blank=True, max_length=120, null=True)),
                ('cons_qty', models.FloatField(blank=True, default=0, null=True)),
                ('rate', models.FloatField(blank=True, default=0, null=True)),
                ('amount', models.FloatField(blank=True, default=0, null=True)),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lib_ysupplier', to='Merchandise.libraryyarnsupplier')),
                ('yarn_cost', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='yarn_inline', to='Merchandise.yarncost')),
            ],
        ),
        migrations.CreateModel(
            name='TrimCostItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.CharField(blank=True, max_length=200, null=True)),
                ('country', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.CharField(blank=True, max_length=300, null=True)),
                ('brand_sup_ref', models.CharField(blank=True, max_length=200, null=True)),
                ('remarks', models.CharField(blank=True, max_length=200, null=True)),
                ('nominated_supp', models.CharField(blank=True, max_length=200, null=True)),
                ('cons_uom', models.CharField(blank=True, max_length=200, null=True)),
                ('cons_unit_gmts', models.FloatField(blank=True, default=0, null=True)),
                ('rate', models.FloatField(blank=True, default=0, null=True)),
                ('amount', models.FloatField(blank=True, default=0, null=True)),
                ('tt_qty', models.FloatField(blank=True, default=0, null=True)),
                ('tt_amt', models.FloatField(blank=True, default=0, null=True)),
                ('apvt_req', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=50, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='Budget/Image')),
                ('source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lib_tsource', to='Merchandise.librarytrimsource')),
                ('trim_cost', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trim_items', to='Merchandise.trimcost')),
            ],
        ),
        migrations.CreateModel(
            name='SmvItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('set_ratio', models.FloatField(blank=True, default=0, null=True)),
                ('sew_smv_pcs', models.FloatField(blank=True, default=0, null=True)),
                ('cut_smv_pcs', models.FloatField(blank=True, default=0, null=True)),
                ('fin_smv_pcs', models.FloatField(blank=True, default=0, null=True)),
                ('complexity', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=20, null=True)),
                ('smv_print', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=20, null=True)),
                ('print_days', models.FloatField(blank=True, default=0, null=True)),
                ('embro', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=20, null=True)),
                ('embro_days', models.FloatField(blank=True, default=0, null=True)),
                ('wash', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=20, null=True)),
                ('wash_days', models.FloatField(blank=True, default=0, null=True)),
                ('sp_work', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=20, null=True)),
                ('sp_work_days', models.FloatField(blank=True, default=0, null=True)),
                ('gmts_dyeing', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=20, null=True)),
                ('gmts_dyeing_days', models.FloatField(blank=True, default=0, null=True)),
                ('aop', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=20, null=True)),
                ('aop_days', models.FloatField(blank=True, default=0, null=True)),
                ('tt_smv', models.FloatField(blank=True, default=0, null=True)),
                ('items', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='smv_products', to='Merchandise.libraryproduct')),
                ('order_smv', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_smv', to='Merchandise.orderentryinfo')),
            ],
        ),
        migrations.CreateModel(
            name='PO_Details',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_status', models.CharField(blank=True, choices=[('Confirmed', 'Confirmed'), ('Projected', 'Projected')], max_length=20, null=True)),
                ('projected_po', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=20, null=True)),
                ('gsm', models.IntegerField(blank=True, default=0, null=True)),
                ('po_no', models.CharField(blank=True, max_length=120, null=True)),
                ('po_recieve_date', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('pub_shipment_date', models.DateField(blank=True, null=True)),
                ('lead_time', models.CharField(blank=True, max_length=20, null=True)),
                ('org_shipment_date', models.DateField(blank=True, null=True)),
                ('fac_recieve_date', models.DateField(blank=True, null=True)),
                ('cutoff_date', models.DateField(blank=True, null=True)),
                ('country_shipment_date', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('color_remarks', models.TextField(blank=True, null=True)),
                ('po_quantity', models.CharField(blank=True, max_length=120, null=True)),
                ('avg_price', models.FloatField(blank=True, default=0.0, null=True)),
                ('amount', models.FloatField(blank=True, default=0.0, null=True)),
                ('excess_cut_pct', models.FloatField(blank=True, default=0.0, null=True)),
                ('plan_cut_qty', models.FloatField(blank=True, default=0, null=True)),
                ('status_active', models.CharField(blank=True, choices=[('Active', 'Active'), ('Inactive', 'Inactive')], max_length=20, null=True)),
                ('tna_from_upto', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('internal_ref', models.CharField(blank=True, max_length=120, null=True)),
                ('delay_for', models.CharField(blank=True, max_length=200, null=True)),
                ('file_no', models.CharField(blank=True, max_length=200, null=True)),
                ('sc_or_lc', models.CharField(blank=True, max_length=120, null=True)),
                ('file_add', models.FileField(blank=True, null=True, upload_to='Order/')),
                ('actual_po_no', models.ImageField(blank=True, null=True, upload_to='Order/')),
                ('remarks', models.TextField(blank=True, null=True)),
                ('order_quan', models.FloatField(blank=True, default=0, null=True)),
                ('tt_rate', models.FloatField(blank=True, default=0, null=True)),
                ('amt', models.FloatField(blank=True, default=0, null=True)),
                ('exc', models.FloatField(blank=True, default=0, null=True)),
                ('plan_cut', models.FloatField(blank=True, default=0, null=True)),
                ('insert_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='country', to='Merchandise.librarycountry')),
                ('country_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='countrytype_lib', to='Merchandise.librarycountrytype')),
                ('cutoff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cutoff_lib', to='Merchandise.librarycutoff')),
                ('inserted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='po_insert_by', to=settings.AUTH_USER_MODEL)),
                ('packing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='packing', to='Merchandise.librarypacking')),
                ('po_job_no', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_entry', to='Merchandise.orderentryinfo')),
                ('po_packing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='po_packing', to='Merchandise.librarypacking')),
            ],
        ),
        migrations.AddField(
            model_name='libraryproduct',
            name='item_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prod_category', to='Merchandise.libraryproductcate'),
        ),
        migrations.CreateModel(
            name='LibraryFabricDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('construction', models.CharField(max_length=200)),
                ('gsm_weight', models.PositiveIntegerField(default=0)),
                ('color_range', models.CharField(blank=True, max_length=200, null=True)),
                ('stich_length', models.CharField(blank=True, max_length=200, null=True)),
                ('process_loss', models.CharField(blank=True, max_length=200, null=True)),
                ('yarn_one_pct', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('yarn_one', models.CharField(blank=True, max_length=120, null=True)),
                ('yarn_count_one', models.CharField(blank=True, max_length=120, null=True)),
                ('yarn_type_one', models.CharField(blank=True, max_length=120, null=True)),
                ('yarn_two_pct', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('yarn_two', models.CharField(blank=True, max_length=120, null=True)),
                ('yarn_count_two', models.CharField(blank=True, max_length=120, null=True)),
                ('yarn_type_two', models.CharField(blank=True, max_length=120, null=True)),
                ('insert_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('fab_nature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Merchandise.libraryfabnature')),
            ],
        ),
        migrations.AddField(
            model_name='librarycompaddress',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compnay', to='Merchandise.librarycompany'),
        ),
        migrations.CreateModel(
            name='Grey_Cons_Items',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('po_no', models.CharField(blank=True, max_length=80, null=True)),
                ('color', models.CharField(blank=True, max_length=200, null=True)),
                ('gmts_size', models.CharField(blank=True, max_length=200, null=True)),
                ('qty', models.FloatField(blank=True, null=True)),
                ('dia', models.CharField(blank=True, max_length=200, null=True)),
                ('item_sizes', models.CharField(blank=True, max_length=200, null=True)),
                ('fab_cons', models.FloatField(blank=True, default=0, null=True)),
                ('process_loss_pct', models.FloatField(blank=True, default=0, null=True)),
                ('grey_cons_unit', models.FloatField(blank=True, default=0, null=True)),
                ('rate', models.FloatField(blank=True, default=0, null=True)),
                ('amount', models.FloatField(blank=True, default=0, null=True)),
                ('pcs', models.FloatField(blank=True, default=0, null=True)),
                ('total_qty', models.FloatField(blank=True, default=0, null=True)),
                ('total_amount', models.FloatField(blank=True, default=0, null=True)),
                ('remarks', models.CharField(blank=True, max_length=200, null=True)),
                ('color_size', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Merchandise.colorsizeitems')),
                ('grey_cons', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='grey_items', to='Merchandise.grey_cons')),
            ],
        ),
        migrations.CreateModel(
            name='FabricCost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insert_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('b_job_no', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fabric_cost', to='Merchandise.budgetprecost')),
                ('inserted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fab_insert_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='fabric_inline_item',
            name='color_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lib_ctype', to='Merchandise.librarycolortype'),
        ),
        migrations.AddField(
            model_name='fabric_inline_item',
            name='con_basis',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lib_con_basis', to='Merchandise.libraryconsumptionbasis'),
        ),
        migrations.AddField(
            model_name='fabric_inline_item',
            name='cs_sensitive',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lib_cs_sensitive', to='Merchandise.librarycolorsizesensitive'),
        ),
        migrations.AddField(
            model_name='fabric_inline_item',
            name='fab_nature',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lib_fn', to='Merchandise.libraryfabnature'),
        ),
        migrations.AddField(
            model_name='fabric_inline_item',
            name='fabric_cost',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fabric_inline', to='Merchandise.fabriccost'),
        ),
        migrations.AddField(
            model_name='fabric_inline_item',
            name='fabric_source',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lib_fsource', to='Merchandise.libraryfabricsource'),
        ),
        migrations.AddField(
            model_name='fabric_inline_item',
            name='nom_supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lib_nsupplier', to='Merchandise.librarynominatedsupp'),
        ),
        migrations.AddField(
            model_name='fabric_inline_item',
            name='uom',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lib_uom', to='Merchandise.libraryunit'),
        ),
        migrations.AddField(
            model_name='fabric_inline_item',
            name='width_dia',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lib_dia_type', to='Merchandise.librarydiatypes'),
        ),
        migrations.CreateModel(
            name='DyeingColorItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gmts_color', models.CharField(blank=True, max_length=200, null=True)),
                ('fabric_color', models.CharField(blank=True, max_length=200, null=True)),
                ('cons_rate', models.FloatField(blank=True, default=0, null=True)),
                ('charge_unit', models.FloatField(blank=True, default=0, null=True)),
                ('dyeing_color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dyeing_item', to='Merchandise.dyeingcolor')),
            ],
        ),
        migrations.CreateModel(
            name='ConversionCost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tt_reg_qty', models.FloatField(blank=True, default=0, null=True)),
                ('tt_avg_reg_qty', models.FloatField(blank=True, default=0, null=True)),
                ('tt_charge_unit', models.FloatField(blank=True, default=0, null=True)),
                ('tt_amount', models.FloatField(blank=True, default=0, null=True)),
                ('insert_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('b_job_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conv_cost', to='Merchandise.budgetprecost')),
                ('inserted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='con_insert_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='conversion_inline',
            name='conversion_cost',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='conver_inline', to='Merchandise.conversioncost'),
        ),
        migrations.AddField(
            model_name='conversion_inline',
            name='process',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lib_cprocess', to='Merchandise.libraryprocess'),
        ),
        migrations.AddField(
            model_name='colorsizeitems',
            name='fabrication',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lib_fabrication', to='Merchandise.libraryfabrication'),
        ),
        migrations.AddField(
            model_name='colorsizeitems',
            name='gmt_items',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='Merchandise.libraryproduct'),
        ),
        migrations.AddField(
            model_name='colorsizeitems',
            name='po_color_size',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='color_size', to='Merchandise.po_details'),
        ),
        migrations.CreateModel(
            name='ColorContrastItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gmts_color', models.CharField(blank=True, max_length=200, null=True)),
                ('contrast_color', models.CharField(blank=True, max_length=200, null=True)),
                ('color_contrast', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contrast_item', to='Merchandise.colorcontrast')),
            ],
        ),
        migrations.AddField(
            model_name='colorcontrast',
            name='fabric_cost',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fab_cost', to='Merchandise.fabric_inline_item'),
        ),
        migrations.AddField(
            model_name='colorcontrast',
            name='inserted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contrast', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Care_level_Items',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('po_no', models.CharField(blank=True, max_length=200, null=True)),
                ('gmts_item', models.CharField(blank=True, max_length=200, null=True)),
                ('country', models.CharField(blank=True, max_length=200, null=True)),
                ('color', models.CharField(blank=True, max_length=200, null=True)),
                ('gmts_size', models.CharField(blank=True, max_length=200, null=True)),
                ('item_color', models.CharField(blank=True, max_length=200, null=True)),
                ('item_sizes', models.CharField(blank=True, max_length=200, null=True)),
                ('cons', models.FloatField(blank=True, default=0, null=True)),
                ('ex_pct', models.FloatField(blank=True, default=0, null=True)),
                ('tt_cons', models.FloatField(blank=True, default=0, null=True)),
                ('rate', models.FloatField(blank=True, default=0, null=True)),
                ('amount', models.FloatField(blank=True, default=0, null=True)),
                ('tt_qty', models.FloatField(blank=True, default=0, null=True)),
                ('tt_amount', models.FloatField(blank=True, default=0, null=True)),
                ('placement', models.FloatField(blank=True, default=0, null=True)),
                ('pcs', models.FloatField(blank=True, default=0, null=True)),
                ('care_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='care_items', to='Merchandise.care_level')),
                ('color_size', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cl_colorsize', to='Merchandise.colorsizeitems')),
            ],
        ),
        migrations.AddField(
            model_name='care_level',
            name='trim_cost',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ctrim_cost', to='Merchandise.trimcostitems'),
        ),
        migrations.AddField(
            model_name='budgetprecost',
            name='job_no',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='budget_cost', to='Merchandise.orderentryinfo'),
        ),
    ]
